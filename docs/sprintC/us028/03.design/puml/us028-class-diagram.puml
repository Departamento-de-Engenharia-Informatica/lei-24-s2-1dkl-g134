@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ListTasksBetweenDatesUI{
}


class ListTasksBetweenDatesController{
-AgendaRepository agendaRepository
    + ListTasksBetweenDatesController(agendaRepository)

    + getPlannedAndPostponedTasksBelongingToCurrentUser()

 }

class Repositories {
    - Repositories(): Repositories
    + getInstance() : Repositories
    + getAgendaRepository() : Repositories
     + getCollaboratorRepository() : Repositories
}


class AgendaRepository {
    + getPlannedAndPostponedTasksBelongingToCurrentUser()
    + getCurrentUserTasksBetweenTwoDates(firstDate,secondDate)
    + sortTasks(taskEntries)

}
class CollaboratorRepository {
    + getCurrentUserCollaborator()

}

class  TaskEntry{
        -title
        -description
        -urgencyLevel
        -expectedDuration
        -state
        -greenSpace

}

class TaskEntryMapper{
+TaskEntryDto  toDTO(TaskEntry)
}
class TaskEntryDto{
+TaskEntry
}


ListTasksBetweenDatesUI .>  ListTasksBetweenDatesController
ListTasksBetweenDatesController ...r> Repositories : repositories
ListTasksBetweenDatesController ...> TaskEntryMapper : Mapper
TaskEntryMapper ...> TaskEntryDto: TaskEntryDto
TaskEntryMapper ...> TaskEntry
ListTasksBetweenDatesUI .> TaskEntryDto
ListTasksBetweenDatesController ..> TaskEntryDto
Repositories ---> "1" AgendaRepository
Repositories ---> "1" CollaboratorRepository
Repositories -> Repositories : instance
Repositories "1" --> "*" TaskEntry

AgendaRepository --> "*" TaskEntry: contains
CollaboratorRepository --> "*" TaskEntry: assigns

 ListTasksBetweenDatesController ......>  TaskEntry : TaskEntry
 ListTasksBetweenDatesController ...> "1" AgendaRepository : AgendaRepository
 ListTasksBetweenDatesController ...> "1" CollaboratorRepository : CollaboratorRepository
@enduml