@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources \n Manager (HRM)" as HRM
participant ":AssignSkillUI" as UI
participant ":AssignSkillController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant ":ApplicationSession" as _APP
participant "appSession\n:ApplicationSession" as APP
participant "currentSession\n:UserSession" as SESSAO
participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
participant "organization\n:Organization" as ORG
participant "skillRepository\n:SkillRepository" as SkillRepository
participant "collaborator\n:Collaborator" as COLLAB

activate HRM

        HRM -> UI : asks to add a skill to a collaborator

        activate UI


            UI -> CTRL** : create

            UI -> CTRL : getCollaborators()
            activate CTRL

                |||
                CTRL -> CTRL : getEmployeeOrganization()
                activate CTRL

                    CTRL -> _APP: getInstance()
                    activate _APP
                        _APP -> CTRL: appSession
                    deactivate _APP


                    CTRL -> APP: getCurrentSession()
                    activate APP

                        APP --> CTRL: currentSession
                    deactivate APP

                    CTRL -> SESSAO: email = getUserEmail()
                    activate SESSAO

                        SESSAO --> CTRL: email
                    deactivate SESSAO

                    CTRL -> RepositorySingleton: getInstance()
                    activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                    deactivate RepositorySingleton

                    CTRL -> PLAT: getOrganizationRepository(email)
                    activate PLAT

                        PLAT --> CTRL: organizationRepository
                    deactivate PLAT


                    CTRL -> OrganizationRepository: getOrganizationByEmployeeEmail(email)
                    activate OrganizationRepository

                        loop for each organization

                            OrganizationRepository -> ORG : anyEmployeeHasEmail(email)
                            activate ORG

                                 ORG --> OrganizationRepository : true/false
                            deactivate ORG
                        end
                        OrganizationRepository --> CTRL : organization
                    deactivate OrganizationRepository

                    CTRL --> CTRL : organization
                deactivate CTRL

                CTRL -> ORG: getCollaboratorsList()
                activate ORG

                ORG --> CTRL: collaboratorsList
                deactivate ORG

                CTRL --> UI : collaboratorsList
            deactivate CTRL

            UI --> HRM : shows collaborators list\n to assign skill/s
        deactivate UI

    HRM -> UI : choose collaborator
    activate UI

   UI -> CTRL : getSkills()
           activate CTRL

 CTRL -> RepositorySingleton : getInstance()
         activate RepositorySingleton

         RepositorySingleton --> CTRL: repositories
         deactivate RepositorySingleton

         CTRL -> PLAT : getSkillRepository()
         activate PLAT

         PLAT -> CTRL : skillRepository
         deactivate PLAT

         CTRL --> SkillRepository : getSkillList()
         activate SkillRepository

         SkillRepository --> CTRL: skillList
         deactivate SkillRepository

         CTRL --> UI : skillList
         deactivate CTRL

         UI --> HRM : show skills list
         deactivate UI

         HRM -> UI : choose one or more skills to assign
         activate UI

         UI -> CTRL : assignSkill(collaborator, skillList)
         activate CTRL

         CTRL -> ORG : assignSkill(collaborator, skillList)
         activate ORG

         ORG -> COLLAB : assignSkills(skillList)
         activate COLLAB

         loop for each skill in skillList
         COLLAB -> COLLAB :assignSkill(skill)

         COLLAB -> COLLAB :validateSkillWasAssigned(skill)
         end

         COLLAB --> ORG : true/false
         deactivate COLLAB

         ORG --> CTRL : true/false
         deactivate ORG

         CTRL --> UI : true/false
         deactivate CTRL

         UI --> HRM : displays operation success
         deactivate UI

         deactivate HRM

 @enduml