@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources \n Manager (HRM)" as ADM
participant ":  AssignJobUI" as UI
participant ":  AssignJobController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant ":ApplicationSession" as _APP
participant "appSession\n:ApplicationSession" as APP
participant "currentSession\n:UserSession" as SESSAO
participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
participant "organization\n:Organization" as ORG
participant "job\n:Job" as JOB

activate ADM

        ADM -> UI : asks to add a job

        activate UI
'
            UI --> ADM : request job name

         deactivate UI

            ADM -> UI : Types requested data

         activate UI

           UI --> ADM : Shows all data and request confirmation

         deactivate UI

            ADM -> UI : Confirm job
    activate UI
        UI -> CTRL** : create()

        UI -> CTRL : createJob(Name of Job)
        activate CTRL

                |||
                CTRL -> CTRL : getEmployeeOrganization()
                activate CTRL

                    CTRL -> _APP: getInstance()
                    activate _APP
                        _APP -> CTRL: appSession
                    deactivate _APP


                    CTRL -> APP: getCurrentSession()
                    activate APP

                        APP --> CTRL: currentSession
                    deactivate APP

                    CTRL -> SESSAO: email = getUserEmail()
                    activate SESSAO

                        SESSAO --> CTRL: email
                    deactivate SESSAO

                    CTRL -> RepositorySingleton: getInstance()
                    activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                    deactivate RepositorySingleton

                    CTRL -> PLAT: getOrganizationRepository(email)
                    activate PLAT

                        PLAT --> CTRL: organizationRepository
                    deactivate PLAT


                    CTRL -> OrganizationRepository: getOrganizationByEmployeeEmail(email)
                    activate OrganizationRepository

                        loop for each organization

                            OrganizationRepository -> ORG : anyEmployeeHasEmail(email)
                            activate ORG

                                 ORG --> OrganizationRepository : true/false
                            deactivate ORG
                        end
                        OrganizationRepository --> CTRL : organization
                    deactivate OrganizationRepository

                    CTRL --> CTRL : organization
                deactivate CTRL

            |||
            CTRL -> ORG: createJob(name)
            activate ORG

                ORG -> JOB**: create(name)
                ORG -> ORG: addJob (job)


                activate ORG
                    ORG -> ORG: validateJob(job)
                    activate ORG
                    ORG --> ORG
                    deactivate ORG
                    ORG --> ORG


                deactivate ORG

                ORG --> CTRL : job

            deactivate ORG

            CTRL --> UI: job
            deactivate CTRL
            UI --> ADM: displays operation success
    deactivate UI

@enduml