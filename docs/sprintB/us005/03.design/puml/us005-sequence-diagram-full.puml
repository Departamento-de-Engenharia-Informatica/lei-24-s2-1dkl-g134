@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Organization Employee" as ADM
participant ":GenarateTeamUI" as UI
participant ":GenarateTeamController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "collaboratorRepository:\nCollaboratorRepository" as CollaboratorRepository
participant "skillRepository:\nSkillRepository" as SkillRepository
participant "teamRepository:\nTeamRepository" as TeamRepository
participant "team:\nTeam" as Team
activate ADM

        ADM -> UI : asks to generate a new team

        activate UI

            UI --> ADM : requests minimum and maximum team size
            deactivate UI

            ADM -> UI : types requested data
            activate UI

            UI -> CTRL** : create

            UI -> CTRL: getSkillList()
            activate CTRL
                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getSkillRepository()
                activate PLAT

                    PLAT --> CTRL: skillRepository
                deactivate PLAT

                CTRL -> SkillRepository : getSkillList()
                activate SkillRepository

                SkillRepository --> CTRL: skillList
                deactivate SkillRepository

                CTRL --> UI : team
            deactivate CTRL

    UI --> ADM : shows list of skills and asks to select\nthe required team skills
    deactivate UI

    ADM -> UI : selects required skills
    activate UI

    UI --> ADM : shows all data and requests confirmation
    deactivate UI

    ADM -> UI : confirms data
    activate UI

    UI -> CTRL: generateTeamProposal(minTeamSize,\nmaxTeamSize, selectedSkillList)
    activate CTRL

        CTRL -> PLAT: getCollaboratorRepository()
        activate PLAT

        PLAT --> CTRL: collaboratorRepository
        deactivate PLAT

        CTRL -> CollaboratorRepository: generateTeamProposal(minTeamSize, maxTeamSize,\nselectedSkillList)
        activate CollaboratorRepository

        CollaboratorRepository --> CTRL: collaboratorList
        deactivate CollaboratorRepository


    CTRL --> UI: collaboratorList
    deactivate CTRL

    UI --> ADM : displays team proposal and asks for approval
    deactivate UI

    ADM -> UI : grants approval
    activate UI

    UI -> CTRL: createTeam(collaboratorList, selectedSkillList)
    activate CTRL

    CTRL -> PLAT: getTeamRepository()
    activate PLAT

    PLAT --> CTRL: teamRepository
    deactivate PLAT

    CTRL -> TeamRepository : createTeam(collaboratorList, selectedSkillList)
    activate TeamRepository

    TeamRepository -> Team**: createTeam(collaboratorList, selectedSkillList)

    TeamRepository --> TeamRepository: addTeam(team)
    activate TeamRepository

    TeamRepository -> TeamRepository: validateTeam(team)
    activate TeamRepository

    TeamRepository --> TeamRepository
    deactivate TeamRepository

    TeamRepository --> TeamRepository
    deactivate TeamRepository

    TeamRepository --> CTRL: team
    deactivate TeamRepository

    CTRL --> UI: team
    deactivate CTRL

    UI --> ADM: display final team

    deactivate UI

deactivate ADM

@enduml